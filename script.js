document.addEventListener("DOMContentLoaded", function () {
    const toggle = document.querySelector(".toggle__theme");
    const card = document.querySelector(".app");
    const contactWidget = document.querySelector("#contact-widget");
    const contactIcon = document.querySelector(".contact-icon");
    const contactMenu = document.querySelector(".contact-menu");

    // Ki·ªÉm tra n·∫øu c√°c ph·∫ßn t·ª≠ c·∫ßn thi·∫øt t·ªìn t·∫°i
    if (!contactWidget || !contactIcon || !contactMenu) {
        console.error("Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ c·∫ßn thi·∫øt!");
        return;
    }

    // Toggle menu khi click v√†o icon
    contactIcon.addEventListener("click", function (event) {
        event.stopPropagation(); // NgƒÉn s·ª± ki·ªán click lan ra ngo√†i
        contactMenu.classList.toggle("show");
    });

    // ·∫®n menu khi click ra ngo√†i
    document.addEventListener("click", function (event) {
        if (!contactMenu.contains(event.target) && !contactIcon.contains(event.target)) {
            contactMenu.classList.remove("show");
        }
    });

    // Chuy·ªÉn ƒë·ªïi theme
    if (toggle) {
        toggle.addEventListener("click", (event) => {
            event.stopPropagation(); // NgƒÉn ch·∫∑n s·ª± ki·ªán click ·∫£nh h∆∞·ªüng ƒë·∫øn menu

            let theme = toggle.querySelector(".fas");
            console.log("Toggling theme...");

            contactWidget.classList.toggle("dark");

            if (theme.classList.contains("fa-moon")) {
                console.log("Switching to dark mode...");
                theme.classList.remove("fa-moon");
                theme.classList.add("fa-sun");
                card.classList.add("dark");
                contactWidget.classList.add("dark");
            } else {
                console.log("Switching to light mode...");
                theme.classList.remove("fa-sun");
                theme.classList.add("fa-moon");
                card.classList.remove("dark");
                contactWidget.classList.remove("dark");
            }
        });
    }
});

// H√†m ki·ªÉm tra xem trang ƒëang ƒë∆∞·ª£c m·ªü trong tr√¨nh duy·ªát t√≠ch h·ª£p c·ªßa c√°c ·ª©ng d·ª•ng
function isInAppBrowser() {
    const userAgent = navigator.userAgent || navigator.vendor || window.opera;
    const inAppBrowsers = [
        "Zalo",        // Zalo
        "FBAN",        // Facebook App on iOS
        "FBAV",        // Facebook App on Android
        "Instagram",   // Instagram
        "Line",        // LINE App
        "Snapchat",    // Snapchat
        "Twitter",     // Twitter App
        "TikTok",      // TikTok App
        "WhatsApp",    // WhatsApp
        "Messenger"    // Facebook Messenger
    ];

    // Ki·ªÉm tra n·∫øu User-Agent ch·ª©a b·∫•t k·ª≥ chu·ªói n√†o trong danh s√°ch
    return inAppBrowsers.some(browser => userAgent.includes(browser));
}

// N·∫øu m·ªü tr√™n tr√¨nh duy·ªát t√≠ch h·ª£p, hi·ªÉn th·ªã c·∫£nh b√°o
if (isInAppBrowser()) {
    // Hi·ªÉn th·ªã th√¥ng b√°o y√™u c·∫ßu m·ªü trong tr√¨nh duy·ªát kh√°c
    document.getElementById('app-warning').style.display = 'block';

    // ·∫®n video n·ªÅn v√† hi·ªÉn th·ªã h√¨nh ·∫£nh n·ªÅn fallback
    const videoBackground = document.querySelector('.video-background');
    const fallbackImage = document.querySelector('.fallback-image');

    if (videoBackground) videoBackground.style.display = 'none';
    if (fallbackImage) fallbackImage.style.display = 'block';
}

// L·∫•y c√°c ph·∫ßn t·ª≠
const continueButton = document.getElementById('continue-button');
const overlay = document.getElementById('overlay');
const welcomeMessage = document.getElementById('welcome-message');
const audio = document.getElementById('welcome-audio');

// Khi DOM ƒë∆∞·ª£c t·∫£i xong, hi·ªÉn th·ªã l·ªõp ph·ªß ngay l·∫≠p t·ª©c
document.addEventListener('DOMContentLoaded', function() {
    var overlay = document.querySelector('.overlay');
    if (overlay) {
        overlay.classList.add('visible'); // Th√™m l·ªõp ƒë·ªÉ hi·ªÉn th·ªã l·ªõp ph·ªß ngay l·∫≠p t·ª©c
    }
});

// Khi trang load, hi·ªÉn th·ªã l·ªõp ph·ªß v√† b·∫£ng l·ªùi ch√†o
window.addEventListener('load', function() {
    overlay.style.display = 'block';
    welcomeMessage.style.display = 'flex';

    // X·ª≠ l√Ω video n·ªÅn (n·∫øu c√≥)
    const videoBackground = document.querySelector('.video-background');
    if (videoBackground) {
        videoBackground.style.display = 'none';

        videoBackground.oncanplaythrough = function() {
            videoBackground.style.display = 'block';
        };
    }
});

    // Nh·∫°c n·ªÅn
document.addEventListener('DOMContentLoaded', function() {
    // L·∫•y ph·∫ßn t·ª≠ √¢m thanh v√† n√∫t "OK"
    let googleVoice = document.getElementById('google-voice');
    let music = document.getElementById('welcome-audio');
    let continueButton = document.getElementById('continue-button');
    let welcomeMessage = document.getElementById('welcome-message');
    let overlay = document.getElementById('overlay'); // N·∫øu b·∫°n c√≥ l·ªõp ph·ªß
    let notification = document.getElementById('notification'); // Th√™m ph·∫ßn th√¥ng b√°o

    // Ki·ªÉm tra xem c√°c ph·∫ßn t·ª≠ c√≥ t·ªìn t·∫°i kh√¥ng
    if (!googleVoice || !music || !continueButton || !welcomeMessage || !overlay || !notification) {
        console.error('L·ªói: Kh√¥ng t√¨m th·∫•y m·ªôt trong c√°c ph·∫ßn t·ª≠ c·∫ßn thi·∫øt!');
        return;
    }

    // H√†m hi·ªÉn th·ªã th√¥ng b√°o
    function showNotification(text) {
        notification.textContent = text;
        notification.style.display = 'block';

        // ·∫®n th√¥ng b√°o sau 3 gi√¢y
        setTimeout(() => {
            notification.style.display = 'none';
        }, 3000);
    }

    // Khi nh·∫•n v√†o n√∫t "Nh·∫•n OK ƒê·ªÉ Ti·∫øp T·ª•c"
    continueButton.addEventListener('click', function() {
        // Hi·ªÉn th·ªã th√¥ng b√°o "ƒêang ph√°t: Gi·ªçng Google"
        showNotification('üé§ ƒêang ph√°t: Gi·ªçng Google');

        // Ph√°t gi·ªçng Google tr∆∞·ªõc
        googleVoice.play().then(() => {
            console.log('Gi·ªçng Google ƒëang ph√°t...');
        }).catch((error) => {
            console.error('Kh√¥ng th·ªÉ ph√°t gi·ªçng Google:', error);
        });

        // Sau khi gi·ªçng Google k·∫øt th√∫c, ph√°t nh·∫°c n·ªÅn
        googleVoice.onended = function() {
            console.log('Gi·ªçng Google ƒë√£ k·∫øt th√∫c, ph√°t nh·∫°c n·ªÅn...');
            googleVoice.pause();
            googleVoice.currentTime = 0;

            // Hi·ªÉn th·ªã th√¥ng b√°o "ƒêang ph√°t nh·∫°c: T√™n b√†i h√°t"
            showNotification('üéµ ƒêang ph√°t nh·∫°c: "Bi·∫øt ƒêau Nh∆∞ng V·∫´n Y√™u (Remix)"');

            // Ph√°t nh·∫°c n·ªÅn
            music.play().then(() => {
                console.log('Nh·∫°c n·ªÅn ƒëang ph√°t...');
            }).catch((error) => {
                console.error('Kh√¥ng th·ªÉ ph√°t nh·∫°c n·ªÅn:', error);
            });
        };

        // ·∫®n b·∫£ng l·ªùi ch√†o v√† l·ªõp ph·ªß
        welcomeMessage.style.display = 'none';
        overlay.style.display = 'none';
    });

    // ƒê·∫£m b·∫£o r·∫±ng Safari nh·∫≠n di·ªán ƒë√∫ng s·ª± ki·ªán nh·∫•n v√† kh√¥ng b·ªã block √¢m thanh
    continueButton.addEventListener('touchstart', function() {
        console.log('T∆∞∆°ng t√°c v·ªõi Safari b·∫Øt ƒë·∫ßu...');
    });
});

    // H√†m copy s·ªë t√†i kho·∫£n
    function showCustomAlert(message) {
        const alertBox = document.getElementById('custom-alert');
        const alertMessage = document.getElementById('alert-message');
    
        // C·∫≠p nh·∫≠t n·ªôi dung
        alertMessage.textContent = message;
    
        // Hi·ªÉn th·ªã b·∫£ng th√¥ng b√°o
        alertBox.style.display = 'flex';
        alertBox.style.animation = 'fadeIn 0.3s ease-in-out';
    }
    
    function closeCustomAlert() {
        const alertBox = document.getElementById('custom-alert');
    
        // Th√™m hi·ªáu ·ª©ng m·ªù d·∫ßn khi ƒë√≥ng
        alertBox.style.animation = 'fadeOut 0.3s ease-in-out';
    
        // ƒê·ª£i hi·ªáu ·ª©ng ho√†n t·∫•t tr∆∞·ªõc khi ·∫©n
        setTimeout(() => {
            alertBox.style.display = 'none';
        }, 300);
    }
    
    // V√≠ d·ª• c√°ch s·ª≠ d·ª•ng
    function copyAccount(bankName, accountNumber) {
        navigator.clipboard.writeText(accountNumber)
            .then(() => {
                showCustomAlert(`S·ªë t√†i kho·∫£n ${bankName} ƒë√£ ƒë∆∞·ª£c sao ch√©p: ${accountNumber}`);
            })
            .catch(() => {
                showCustomAlert('Sao ch√©p th·∫•t b·∫°i, vui l√≤ng th·ª≠ l·∫°i!');
            });
    }    

    // M√£ h√≥a v√† hi·ªÉn th·ªã ph·∫ßn b·∫£n quy·ªÅn "Design by Hoang Van Bao."
    (function() {
        const _0x4e76 = [
            '\u0044\u0065\u0073\u0069\u0067\u006e\u0020\u0062\u0079\u0020\u0048\u006f\u0061\u006e\u0067\u0020\u0056\u0061\u006e\u0020\u0042\u0061\u006f'
        ];
    
        const _0x3f21 = function(_0x5c1d, _0x1c3f) {
            return _0x4e76[_0x5c1d];
        };
    
        // T·∫°o ph·∫ßn t·ª≠ hi·ªÉn th·ªã b·∫£n quy·ªÅn
        const copyrightElement = document.createElement('div');
        copyrightElement.classList.add('rainbow-border');
        copyrightElement.style.position = 'fixed';
        copyrightElement.style.bottom = '5px';
        copyrightElement.style.left = '50%';
        copyrightElement.style.transform = 'translateX(-50%)';
        copyrightElement.style.color = 'white';
        copyrightElement.style.fontSize = '14px';
        copyrightElement.style.fontFamily = 'Arial, sans-serif';
        copyrightElement.style.zIndex = '9997';
        copyrightElement.innerHTML = _0x3f21(0);
    
        document.body.appendChild(copyrightElement);
    
        // Ki·ªÉm tra ch·ªânh s·ª≠a ho·∫∑c x√≥a ph·∫ßn t·ª≠
        const originalContent = copyrightElement.outerHTML;
    
        // Ki·ªÉm tra n·∫øu ph·∫ßn t·ª≠ b·ªã thay ƒë·ªïi ho·∫∑c x√≥a
        setInterval(function() {
            if (copyrightElement.outerHTML !== originalContent) {
                // Ngay l·∫≠p t·ª©c g√¢y l·ªói khi c√≥ s·ª± thay ƒë·ªïi
                alert('Ph·∫ßn b·∫£n quy·ªÅn ƒë√£ b·ªã thay ƒë·ªïi ho·∫∑c x√≥a! Trang s·∫Ω ng·ª´ng ho·∫°t ƒë·ªông.');
                document.body.innerHTML = ''; // X√≥a to√†n b·ªô n·ªôi dung trang
                throw new Error('Ph·∫ßn b·∫£n quy·ªÅn b·ªã ch·ªânh s·ª≠a.');
            }
        }, 100); // Ki·ªÉm tra th∆∞·ªùng xuy√™n h∆°n (100ms) ƒë·ªÉ ph√°t hi·ªán s·ª± thay ƒë·ªïi nhanh ch√≥ng
    
        // NgƒÉn x√≥a ph·∫ßn t·ª≠ b·∫±ng MutationObserver
        const observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                // Ki·ªÉm tra n·∫øu ph·∫ßn t·ª≠ b·ªã x√≥a
                if (!document.body.contains(copyrightElement)) {
                    document.body.appendChild(copyrightElement);
                    alert('Kh√¥ng th·ªÉ x√≥a ph·∫ßn b·∫£n quy·ªÅn n√†y! Trang s·∫Ω ng·ª´ng ho·∫°t ƒë·ªông.');
                    document.body.innerHTML = ''; // G√¢y l·ªói trang
                    throw new Error('Ph·∫ßn b·∫£n quy·ªÅn b·ªã x√≥a.');
                }
    
                // Ki·ªÉm tra thay ƒë·ªïi n·ªôi dung ph·∫ßn t·ª≠
                if (mutation.type === 'childList' || mutation.type === 'attributes') {
                    if (copyrightElement.innerHTML !== _0x3f21(0)) {
                        alert('Ph·∫ßn b·∫£n quy·ªÅn ƒë√£ b·ªã thay ƒë·ªïi! Trang s·∫Ω ng·ª´ng ho·∫°t ƒë·ªông.');
                        document.body.innerHTML = '';
                        throw new Error('Ph·∫ßn b·∫£n quy·ªÅn b·ªã thay ƒë·ªïi.');
                    }
                }
            });
        });
    
        observer.observe(document.body, { childList: true, subtree: true, attributes: true });
    
        // T·∫°o h√†m b·∫£o v·ªá m√£ ngu·ªìn, ng·ª´ng ngay khi c√≥ thay ƒë·ªïi
        function protectCode() {
            if (document.body.innerHTML.includes('Ho√†ng VƒÉn B·∫£o')) {
                setTimeout(protectCode, 100); // Ti·∫øp t·ª•c ki·ªÉm tra
            } else {
                alert('M√£ JavaScript b·ªã thay ƒë·ªïi ho·∫∑c x√≥a. Trang s·∫Ω ng·ª´ng ho·∫°t ƒë·ªông.');
                document.body.innerHTML = ''; // X√≥a n·ªôi dung trang
                throw new Error('M√£ JavaScript b·ªã thay ƒë·ªïi.');
            }
        }
        protectCode();
    })();

// Ng·ª´ng chu·ªôt ph·∫£i
document.addEventListener('contextmenu', function(e) {
    e.preventDefault(); // Ng·ª´ng chu·ªôt ph·∫£i
});

// Ng·ª´ng c√°c ph√≠m t·∫Øt: Ctrl + U, F12, Ctrl + Shift + I (m·ªü DevTools)
document.addEventListener('keydown', function(e) {
    // Ng·ª´ng Ctrl + U (Xem m√£ ngu·ªìn)
    if (e.ctrlKey && (e.key === 'u' || e.key === 'U')) {
        e.preventDefault();
    }
    // Ng·ª´ng F12 (M·ªü Developer Tools)
    if (e.keyCode === 123) { 
        e.preventDefault();
    }
    // Ng·ª´ng Ctrl + Shift + I (M·ªü Developer Tools)
    if (e.ctrlKey && e.shiftKey && e.key === 'I') {
        e.preventDefault();
    }
    // Ng·ª´ng Ctrl + Shift + J (M·ªü Console DevTools)
    if (e.ctrlKey && e.shiftKey && e.key === 'J') {
        e.preventDefault();
    }
    // Ng·ª´ng F11 (Ch·∫ø ƒë·ªô to√†n m√†n h√¨nh)
    if (e.keyCode === 122) {
        e.preventDefault();
    }
});

// Ki·ªÉm tra khi DevTools b·ªã m·ªü v√† ng·ª´ng c√°c h√†nh ƒë·ªông
(function() {
    let devtoolsOpen = false;
    const threshold = 160;
    window.addEventListener('resize', function() {
        if (window.innerWidth - window.outerWidth > threshold || window.innerHeight - window.outerHeight > threshold) {
            devtoolsOpen = true;
            alert('Developer tools ƒë√£ ƒë∆∞·ª£c m·ªü!');
            // B·∫°n c√≥ th·ªÉ th·ª±c hi·ªán h√†nh ƒë·ªông ng·ª´ng ho·∫°t ƒë·ªông c·ªßa trang n·∫øu c·∫ßn
        }
    });

    setInterval(function() {
        if (devtoolsOpen) {
            // Ch·∫∑n trang n·∫øu DevTools b·ªã m·ªü
            document.body.innerHTML = '';
            alert('Trang ƒë√£ b·ªã ch·∫∑n v√¨ Developer tools ƒë√£ ƒë∆∞·ª£c m·ªü!');
        }
    }, 1000);
})();

// NgƒÉn ng·ª´a sao ch√©p (copy) tr√™n to√†n trang
document.addEventListener('copy', function(e) {
    e.preventDefault();  // Ng·ª´ng thao t√°c sao ch√©p
    alert("Sao ch√©p kh√¥ng ƒë∆∞·ª£c ph√©p tr√™n trang web n√†y!");
});

// Ng·ª´ng ch·ªçn vƒÉn b·∫£n (select) tr√™n to√†n trang, ngo·∫°i tr·ª´ trong b·∫£ng email h·ªó tr·ª£
document.addEventListener('selectstart', function(e) {
    const emailSupportModal = document.getElementById("email-support-modal");

    // N·∫øu kh√¥ng ·ªü trong b·∫£ng email h·ªó tr·ª£, ng·ª´ng ch·ªçn vƒÉn b·∫£n
    if (!emailSupportModal.contains(document.activeElement)) {
        e.preventDefault();
    }
});

// Ng·ª´ng c√°c thao t√°c ch·∫°m (touch) tr√™n thi·∫øt b·ªã di ƒë·ªông
document.body.addEventListener('touchstart', function(e) {
    e.preventDefault();
}); 

// Ch·∫∑n Ctrl + C ·ªü t·∫•t c·∫£ n∆°i tr√™n trang
document.addEventListener('keydown', function(e) {
    const emailSupportModal = document.getElementById("email-support-modal");

    // Ch·∫∑n Ctrl + C tr√™n to√†n trang
    if (e.ctrlKey && e.key === 'c') {
        e.preventDefault();  // Ng·ª´ng sao ch√©p
        alert("Sao ch√©p kh√¥ng ƒë∆∞·ª£c ph√©p tr√™n trang n√†y!");
    }

    // Ch·ªâ cho ph√©p ch·ªçn t·∫•t c·∫£ (Ctrl + A) trong b·∫£ng email h·ªó tr·ª£
    if (e.ctrlKey && e.key === 'a' && emailSupportModal.contains(document.activeElement)) {
        return;  // Cho ph√©p b√¥i ƒëen t·∫•t c·∫£ khi nh·∫•n Ctrl + A trong b·∫£ng email h·ªó tr·ª£
    }
});

// H√†m ƒë·ªÉ hi·ªÉn th·ªã/·∫©n menu khi nh·∫•p v√†o icon CSKH
function toggleContactMenu() {
    const menu = document.querySelector(".contact-menu");
    menu.style.display = (menu.style.display === "block") ? "none" : "block";
}

// Email h·ªó tr·ª£
document.addEventListener("DOMContentLoaded", function () {
    document.getElementById("gmail-btn").addEventListener("click", function () {
        let emailModal = document.getElementById("email-support-modal");
        emailModal.style.display = "flex";
        setTimeout(() => { emailModal.style.opacity = "1"; }, 10);

        // X√≥a d·ªØ li·ªáu ƒë√£ nh·∫≠p tr∆∞·ªõc khi m·ªü modal
        document.getElementById("fromEmail").value = "";  // X√≥a email ng∆∞·ªùi g·ª≠i
        document.getElementById("email-subject").value = "";  // X√≥a ti√™u ƒë·ªÅ
        document.getElementById("email-message").value = "";  // X√≥a n·ªôi dung
    });

    // G√°n s·ª± ki·ªán cho n√∫t g·ª≠i email
    document.getElementById("sendEmailBtn").addEventListener("click", function() {
        sendEmail(); // G·ªçi h√†m g·ª≠i email
    });
});

// ƒê√≥ng b·∫£ng g·ª≠i email
function closeEmailModal() {
    let emailModal = document.getElementById("email-support-modal");
    emailModal.style.opacity = "0";
    setTimeout(() => { emailModal.style.display = "none"; }, 300);
}

// G·ª≠i email b·∫±ng EmailJS
function sendEmail() {
    // L·∫•y th√¥ng tin t·ª´ form
    const fromEmail = document.getElementById("fromEmail").value.trim();
    const toEmail = document.getElementById("toEmail").value;
    const subject = document.getElementById("email-subject").value.trim();
    const message = document.getElementById("email-message").value.trim();

    // Ki·ªÉm tra n·∫øu ch∆∞a nh·∫≠p ƒë·ªß th√¥ng tin
    if (!fromEmail || !subject || !message) {
        alert("Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!");
        return;
    }

    // Ki·ªÉm tra email c√≥ ƒë√∫ng ƒë·ªãnh d·∫°ng @gmail.com kh√¥ng
    const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\.com$/;
    if (!emailRegex.test(fromEmail)) {
        alert("Email c·ªßa b·∫°n ph·∫£i c√≥ ƒë·ªãnh d·∫°ng @gmail.com !!!");
        return;
    }

    // G·ª≠i email qua EmailJS
    emailjs.send("service_4ph1p6g", "template_fvv4mpt", {
        from_name: fromEmail,   // T√™n ng∆∞·ªùi g·ª≠i
        to_name: "B·∫£o",         // T√™n ng∆∞·ªùi nh·∫≠n, c√≥ th·ªÉ thay ƒë·ªïi theo y√™u c·∫ßu
        subject: subject,       // Ti√™u ƒë·ªÅ tin nh·∫Øn
        message: message,       // N·ªôi dung tin nh·∫Øn
        from_email: fromEmail,  // Email ng∆∞·ªùi g·ª≠i
    }, "rsh39BTboQMTgey0m")
    .then((response) => {
        console.log('EmailJS Response:', response);
        alert("Email ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!");
        closeEmailModal();

        // X√≥a d·ªØ li·ªáu ƒë√£ nh·∫≠p sau khi g·ª≠i th√†nh c√¥ng
        document.getElementById("fromEmail").value = "";  // X√≥a email ng∆∞·ªùi g·ª≠i
        document.getElementById("email-subject").value = "";  // X√≥a ti√™u ƒë·ªÅ
        document.getElementById("email-message").value = "";  // X√≥a n·ªôi dung
    })
    .catch((error) => {
        console.error('EmailJS Error:', error);
        alert("G·ª≠i email th·∫•t b·∫°i, vui l√≤ng th·ª≠ l·∫°i!");
    });
}

// B·ªô ƒë·∫øm t·ª´
document.addEventListener("DOMContentLoaded", function () {
    const emailLabel = document.querySelector("label[for='email-message']");
    const charCount = document.createElement("span");
    charCount.id = "charCount";
    charCount.textContent = "0/200";
    charCount.style.color = "white"; // M√†u m·∫∑c ƒë·ªãnh
    charCount.style.marginLeft = "5px"; // Kho·∫£ng c√°ch gi·ªØa ch·ªØ "N·ªôi dung:" v√† b·ªô ƒë·∫øm
    charCount.style.fontWeight = "bold"; // In ƒë·∫≠m cho d·ªÖ th·∫•y
    emailLabel.appendChild(charCount); // Ch√®n v√†o ngay sau ch·ªØ "N·ªôi dung:"

    const emailMessage = document.getElementById("email-message");
    const sendEmailBtn = document.getElementById("sendEmailBtn");
    const cancelBtn = document.querySelector("button[type='button'][onclick='closeEmailModal()']"); // N√∫t h·ªßy
    const maxChars = 200;

    // Ki·ªÉm tra n·∫øu email ƒë√£ g·ª≠i th√†nh c√¥ng tr∆∞·ªõc ƒë√≥
    if (localStorage.getItem("emailSent") === "true") {
        emailMessage.value = ""; // X√≥a n·ªôi dung email
        charCount.textContent = "0/200"; // Reset b·ªô ƒë·∫øm
        charCount.style.color = "white"; // ƒê·∫∑t l·∫°i m√†u b√¨nh th∆∞·ªùng
        localStorage.removeItem("emailSent"); // X√≥a tr·∫°ng th√°i g·ª≠i th√†nh c√¥ng
    }

    // Ki·ªÉm tra s·ªë k√Ω t·ª± khi nh·∫≠p
    emailMessage.addEventListener("input", function () {
        let currentLength = emailMessage.value.length;
        charCount.textContent = `${currentLength}/200`;

        // ƒê·ªïi m√†u khi g·∫ßn ho·∫∑c v∆∞·ª£t qu√° 200 k√Ω t·ª±
        if (currentLength >= 190 && currentLength < maxChars) {
            charCount.style.color = "yellow"; // C·∫£nh b√°o khi g·∫ßn gi·ªõi h·∫°n
            sendEmailBtn.disabled = false;
        } else if (currentLength === maxChars) {
            charCount.style.color = "red"; // ƒê·∫°t 200 k√Ω t·ª±
            sendEmailBtn.disabled = false; // V·∫´n cho ph√©p g·ª≠i
        } else if (currentLength > maxChars) {
            charCount.style.color = "red"; // Qu√° gi·ªõi h·∫°n
            sendEmailBtn.disabled = true; // Ch·∫∑n g·ª≠i
        } else {
            charCount.style.color = "white"; // B√¨nh th∆∞·ªùng
            sendEmailBtn.disabled = false;
        }
    });

    // X·ª≠ l√Ω khi ng∆∞·ªùi d√πng ·∫•n n√∫t H·ªßy
    cancelBtn.addEventListener("click", function () {
        emailMessage.value = ""; // X√≥a n·ªôi dung
        charCount.textContent = "0/200"; // Reset b·ªô ƒë·∫øm
        charCount.style.color = "white"; // ƒê·∫∑t l·∫°i m√†u b√¨nh th∆∞·ªùng
    });

    // Lo·∫°i b·ªè th√¥ng b√°o alert khi nh·∫•n n√∫t G·ª≠i
    sendEmailBtn.addEventListener("click", function () {
        let currentLength = emailMessage.value.length;
        if (currentLength > maxChars) {
            sendEmailBtn.disabled = true; // Ch·∫∑n g·ª≠i
        }

        // X·ª≠ l√Ω logic g·ª≠i email ·ªü ƒë√¢y m√† kh√¥ng c·∫ßn alert
        // Sau khi g·ª≠i th√†nh c√¥ng, l∆∞u tr·∫°ng th√°i g·ª≠i
        localStorage.setItem("emailSent", "true");

        // X·ª≠ l√Ω g·ª≠i email th√†nh c√¥ng (kh√¥ng c·∫ßn alert n·ªØa)
    });

    // Reset b·ªô ƒë·∫øm khi quay l·∫°i b·∫£ng email h·ªó tr·ª£
    window.addEventListener("focus", function () {
        let currentLength = emailMessage.value.length;
        charCount.textContent = `${currentLength}/200`; // Gi·ªØ nguy√™n b·ªô ƒë·∫øm
    });
});

    // Lo·∫°i b·ªè ph·∫ßn Check Spelling
document.addEventListener("DOMContentLoaded", function() {
    const inputs = document.querySelectorAll("input, textarea");
    
    inputs.forEach(input => {
        input.setAttribute("spellcheck", "false");
    });
});

    // ¬© HO√ÄNG VƒÇN B·∫¢O ‚úÖ
(function() {
    setTimeout(function() {
        console.log("%c‚ö†Ô∏è STOP COPY SOURCE !", "color: red; font-size: 40px; font-weight: bold; text-shadow: 2px 2px 5px black;");
        console.log("%c‚áù ¬© HO√ÄNG VƒÇN B·∫¢O ‚úÖ", "color: black; font-size: 35px; font-weight: bold;");
        console.log("%c‚áù Tr·ªôm SOURCE L√† H√†nh Vi Kh√¥ng T·ªët, C·∫ßn Source Inbox Facebook ƒê·ªÉ xin, Please !!! ", "color: black; font-size: 30px;");
        console.log("%c‚áù Facebook C·ªßa T√¥i: https://www.facebook.com/HVB.Profile", "color: blue; font-size: 22px; text-decoration: underline;");
    }, 1000); // Ch·∫°y sau 1 gi√¢y khi trang load
})();

// Ph·∫ßn x·ª≠ l√Ω Loading
document.addEventListener("DOMContentLoaded", function () {
    const loadingOverlay = document.querySelector(".loading-overlay");
    const loaderCover = document.querySelector(".LoaderCover");
    const content = document.getElementById("content");

    setTimeout(() => {
        requestAnimationFrame(() => {
            if (loadingOverlay) loadingOverlay.classList.add("fade-out"); // ·∫®n hi·ªáu ·ª©ng loading
            if (loaderCover) loaderCover.classList.add("hidden"); // ·∫®n l·ªõp ph·ªß n·∫øu c√≥
            if (content) content.style.display = "block"; // Hi·ªÉn th·ªã n·ªôi dung trang
        });
    }, 1500); // Gi·∫£m xu·ªëng 1.5s ƒë·ªÉ tƒÉng t·ªëc load m√† v·∫´n ƒë·∫πp
});

// Ph·∫ßn hi·ªÉn th·ªã FPS
function updateFPS() {
    let fpsElement = document.querySelector("#fpsCounter .fps-value"); // L·∫•y ph·∫ßn t·ª≠ hi·ªÉn th·ªã FPS
    let lastFrameTime = performance.now();
    let frameCount = 0;

    function refreshFPS() {
        let now = performance.now();
        frameCount++;

        if (now - lastFrameTime >= 1000) { // C·∫≠p nh·∫≠t m·ªói gi√¢y
            let fps = Math.round(frameCount / ((now - lastFrameTime) / 1000)); // Ch·ªâ l·∫•y s·ªë nguy√™n
            fpsElement.textContent = `${fps} FPS`;
            lastFrameTime = now;
            frameCount = 0;
        }

        requestAnimationFrame(refreshFPS);
    }

    refreshFPS();
}

document.addEventListener("DOMContentLoaded", function () {
    updateFPS();
});
